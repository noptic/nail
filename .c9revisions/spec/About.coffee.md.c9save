{"ts":1380927458054,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1380960637414,"patch":[[{"diffs":[[1,"nail\n===="]],"start1":0,"start2":0,"length1":0,"length2":9}]],"length":9,"saved":false}
{"ts":1381183737569,"patch":[[{"diffs":[[0,"nail"],[-1,"\n===="],[1," - simple modular classes\n=============================\nMailisasimplebt flexbletool for creating coffe/java script classes.\n\nNail uses the powefull [nail-core] API to handlethe propertiesmethods and\niheritance with seperate replacable modules.\n\nClass definitions in nail are well strcutured and tool friendly.\n\nExample\n=======\nHere is an example nail class defiition.\n\n    nail = require.nail\n    nail.to exports, 'my-app',\n      Person:\n        properties\n          displayName:  'anon'\n          lastSeen:     0\n        methods:\n          touch: (time) -> \n            if arguments.length == 0\n                time = new Date().getTime()\n            @lastSeen = time\n          "]],"start1":0,"start2":0,"length1":9,"length2":683}]],"length":683,"saved":false}
{"ts":1381183995488,"patch":[[{"diffs":[[0,"y.\n\n"],[-1,"Exampl"],[1,"Usga"],[0,"e\n=="]],"start1":311,"start2":311,"length1":14,"length2":12},{"diffs":[[0,"===\n"],[-1,"Here is an example nail class defiition."],[1,"The following coe defines 2 classes:"],[0,"\n\n  "]],"start1":325,"start2":325,"length1":48,"length2":44},{"diffs":[[0,"'my-"],[-1,"app"],[1,"module"],[0,"',\n "]],"start1":412,"start2":412,"length1":11,"length2":14},{"diffs":[[0,"n = time"],[-1,""],[0,""],[1,"\n      \n      User:      \n        parent: 'my-module.Person'\n        properties:\n            login:          null\n            passwordHash:   null"],[0,"\n       "]],"start1":661,"start2":661,"length1":16,"length2":162}]],"length":826,"saved":false}
{"ts":1381184443639,"patch":[[{"diffs":[[0,"   nail "],[1,"   "],[0,"= requir"]],"start1":368,"start2":368,"length1":16,"length2":19},{"diffs":[[0,"uire"],[-1,".nail"],[1," '../coverage/instrument/lib/module.js'\n    should  = require 'should'"],[0,"\n   "]],"start1":384,"start2":384,"length1":13,"length2":78},{"diffs":[[0,"dHash:   null\n          "],[1,"\nThis creates a 'Person' class in the namespace 'my-module'.\n\n    should = require ''"]],"start1":870,"start2":870,"length1":24,"length2":109}]],"length":979,"saved":false}
{"ts":1381184781181,"patch":[[{"diffs":[[0,"==\nT"],[-1,"he following coe defines 2 classes:"],[1,"o ensure taht the examle code is up to date it is run as a test-\nThis requires an  instrumented version of nail, underscore and should.\nIn your productive code `nail = require 'nail'` should be enough."],[0,"\n\n  "]],"start1":326,"start2":326,"length1":43,"length2":209},{"diffs":[[0,"should'\n"],[1,"    _       = require 'underscore'\n\nThe following coe defines 2 classes:\n    \n"],[0,"    nail"]],"start1":617,"start2":617,"length1":16,"length2":94},{"diffs":[[0,"    "],[-1,"should = require ''"]],"start1":1200,"start2":1200,"length1":23,"length2":4}]],"length":1204,"saved":false}
{"ts":1381185072083,"patch":[[{"diffs":[[0,"e:  "],[-1,"'anon'"],[1,"null"],[0,"\n   "]],"start1":790,"start2":790,"length1":14,"length2":12},{"diffs":[[0,"ethods:\n"],[1,"          init: (displayName, lastSeen) ->\n            @displayName    = displayName   ? 'anon'\n            @lastSen        = lastSeen      ? new Date().getTime()\n"],[0,"        "]],"start1":834,"start2":834,"length1":16,"length2":179},{"diffs":[[0," time\n      "],[1,"  "],[0,"\n"],[-1,""],[0,"      User: "]],"start1":1137,"start2":1137,"length1":25,"length2":27},{"diffs":[[0,"ordHash:   null\n"],[1,""],[0,"          \nThis "]],"start1":1275,"start2":1275,"length1":32,"length2":32},{"diffs":[[0,"    "],[-1,"\nThis creates a 'Person' class in the namespace 'my-module'."],[0,"\n\n  "]],"start1":1297,"start2":1297,"length1":68,"length2":8}]],"length":1307,"saved":false}
{"ts":1381185302786,"patch":[[{"diffs":[[0,"operties"],[1,":"],[0,"\n       "]],"start1":761,"start2":761,"length1":16,"length2":17}]],"length":1308,"saved":false}
{"ts":1381185705496,"patch":[[{"diffs":[[0,"===\n"],[-1,"M"],[1,"N"],[0,"ail"],[1," "],[0,"is"],[-1,"a"],[1," a "],[0,"simple"],[-1,"b"],[1," bu"],[0,"t fl"]],"start1":56,"start2":56,"length1":22,"length2":27},{"diffs":[[0," flexble"],[1," "],[0,"tool for"]],"start1":80,"start2":80,"length1":16,"length2":17}]],"length":1314,"saved":false}
{"ts":1381186794374,"patch":[[{"diffs":[[0,"score'\n\n"],[1,"###Basics\n"],[0,"The foll"]],"start1":659,"start2":659,"length1":16,"length2":26},{"diffs":[[0,"owing co"],[1,"d"],[0,"e define"]],"start1":685,"start2":685,"length1":16,"length2":17},{"diffs":[[0,"odule',\n"],[1,"      \n"],[0,"      Pe"]],"start1":746,"start2":746,"length1":16,"length2":23},{"diffs":[[0,"        "],[-1,"  \n"],[1,"methods:\n            init: (displayName, lastSeen, login, passwordHash) ->\n                @::prototype.init.call @, displayName, lastSeen\n                @login = login ? null\n                @passwordHash = passwordHash ? null"],[0,"\n    "]],"start1":1316,"start2":1316,"length1":16,"length2":241}]],"length":1557,"saved":false}
{"ts":1381186926417,"patch":[[{"diffs":[[0,"e'\n\n"],[-1,"###Basics\n"],[0,"The "]],"start1":663,"start2":663,"length1":18,"length2":8}]],"length":1547,"saved":false}
{"ts":1381214482870,"patch":[[{"diffs":[[0," classes"],[-1,":"],[1,", a general Person class and a more \nspecific User class which is a child of Person."],[0,"\n    \n  "]],"start1":695,"start2":695,"length1":17,"length2":100}]],"length":1630,"saved":false}
{"ts":1381248702700,"patch":[[{"diffs":[[0,"nes "],[-1,"2"],[1,"the"],[0," class"],[-1,"es, a general Person class and a more \nspecific User class which is a child of Person"],[1," `Person` and adds it to exports and the \nnamespace 'my-module'"],[0,".\n  "]],"start1":690,"start2":690,"length1":100,"length2":80},{"diffs":[[0,"wordHash ? null\n    "],[1,"\nNow our package exports 2 constructor functions.\n    \n    describe 'person and user'\n    (_.isFunction exports.Person).should,be.ok\n    (_.isFunction exports.User).should,be.ok\n\n    myPerson =\n\n    "]],"start1":1590,"start2":1590,"length1":20,"length2":219}]],"length":1809,"saved":false}
{"ts":1381248986878,"patch":[[{"diffs":[[0,"layName "],[-1,"   "],[0,"= displa"]],"start1":980,"start2":980,"length1":19,"length2":16},{"diffs":[[0,"Sen     "],[-1,"   "],[0,"= lastSe"]],"start1":1030,"start2":1030,"length1":19,"length2":16},{"diffs":[[0,"rts "],[-1,"2"],[1,"the"],[0," con"]],"start1":1625,"start2":1625,"length1":9,"length2":11},{"diffs":[[0,"or f"],[-1,"unctions"],[1,"or person"],[0,".\n  "]],"start1":1642,"start2":1642,"length1":16,"length2":17},{"diffs":[[0,"be '"],[-1,"p"],[1,"P"],[0,"erson"],[-1," and user'\n   "],[1,"', ->\n      it 'is a function', ->"],[0," (_."]],"start1":1672,"start2":1672,"length1":28,"length2":48},{"diffs":[[0,"    "],[-1,"(_.isFunction exports.User).should,be.ok\n\n    myPerson ="],[1,"\nAll arguments we pass to the constructor are passed on to init:\n    \n      it 'calls init'\n        now      = new Date().getTime()\n        myPerson = new exports.Person "],[0,"\n\n  "]],"start1":1760,"start2":1760,"length1":64,"length2":178}]],"length":1940,"saved":false}
{"ts":1381249101994,"patch":[[{"diffs":[[0,"ime\n"],[-1,"        \n      User:      \n        parent: 'my-module.Person'\n        properties:\n            login:          null\n            passwordHash:   null\n        methods:\n            init: (displayName, lastSeen, login, passwordHash) ->\n                @::prototype.init.call @, displayName, lastSeen\n                @login = login ? null\n                @passwordHash = passwordHash ? null\n    "],[0,"\n"],[1,""],[0,"Now "]],"start1":1211,"start2":1211,"length1":398,"length2":9},{"diffs":[[0,"ate().getTime()\n"],[-1,""],[0,"        myPerson"]],"start1":1491,"start2":1491,"length1":32,"length2":32},{"diffs":[[0,".Person "],[1,"'Dalia', now\n        myPerson.displayName.should.equal 'Dalia'\n        myPerson.lastSeen.should.equal now"],[0,"\n\n    "]],"start1":1537,"start2":1537,"length1":14,"length2":119}]],"length":1656,"saved":false}
{"ts":1381249190142,"patch":[[{"diffs":[[0,"on', -> "],[1,"\n        "],[0,"(_.isFun"]],"start1":1320,"start2":1320,"length1":16,"length2":25}]],"length":1665,"saved":false}
{"ts":1381249200622,"patch":[[{"diffs":[[0,").should"],[-1,","],[1,"."],[0,"be.ok\n  "]],"start1":1365,"start2":1365,"length1":17,"length2":17}]],"length":1665,"saved":false}
{"ts":1381249237167,"patch":[[{"diffs":[[0,"ls init'"],[1,", ->"],[0,"\n       "]],"start1":1467,"start2":1467,"length1":16,"length2":20}]],"length":1669,"saved":false}
{"ts":1381249321863,"patch":[[{"diffs":[[0,"ame "],[-1,"  ? 'anon'"],[0,"\n   "]],"start1":998,"start2":998,"length1":18,"length2":8},{"diffs":[[0,"Seen"],[-1,"      ? new Date().getTime()"],[0,"\n   "]],"start1":1034,"start2":1034,"length1":36,"length2":8}]],"length":1631,"saved":false}
{"ts":1381249370203,"patch":[[{"diffs":[[0," @lastSe"],[1,"e"],[0,"n     = "]],"start1":1014,"start2":1014,"length1":16,"length2":17}]],"length":1632,"saved":false}
{"ts":1381249574597,"patch":[[{"diffs":[[0,"een\n"],[-1,"          touch: (time) -> \n            if arguments.length == 0\n                time = new Date().getTime()\n            @lastSeen = time"],[0,"\n\nNo"]],"start1":1036,"start2":1036,"length1":145,"length2":8}]],"length":1495,"saved":false}
{"ts":1381250088423,"patch":[[{"diffs":[[0,"le',"],[-1,"\n      \n     "],[0," Per"]],"start1":802,"start2":802,"length1":21,"length2":8},{"diffs":[[0,":\n      "],[-1," "],[-1," "],[0,"properti"]],"start1":813,"start2":813,"length1":18,"length2":16},{"diffs":[[0,"erties:\n"],[-1,"  "],[0,"        "]],"start1":825,"start2":825,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"  "],[0,"lastSeen"]],"start1":860,"start2":860,"length1":18,"length2":16},{"diffs":[[0,":     0\n"],[-1,"  "],[0,"      me"]],"start1":876,"start2":876,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"  "],[0,"init: (d"]],"start1":899,"start2":899,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"  "],[0,"@display"]],"start1":942,"start2":942,"length1":18,"length2":16},{"diffs":[[0,"ayName \n"],[-1,"  "],[0,"        "]],"start1":970,"start2":970,"length1":18,"length2":16},{"diffs":[[0,"al now\n\n"],[1,"Writing a asignement for every property is not necessary. [nail-common] includes\na `injector` module to do DI nand even if nail does not use the module on object \ncretaion we can use the Module API to do the work for us:\n\n"],[0,"    "]],"start1":1456,"start2":1456,"length1":12,"length2":234}]],"length":1690,"saved":false}
{"ts":1381257906445,"patch":[[{"diffs":[[0,"    "],[-1,"init: (displayName, lastSeen) ->\n          @displayName = displayName \n          @lastSeen     = lastSeen\n"],[1,"touch:\n            "],[0,"\n\nNo"]],"start1":903,"start2":903,"length1":114,"length2":27}]],"length":1603,"saved":false}
{"ts":1381257968201,"patch":[[{"diffs":[[0,"  touch:"],[1," (newTime)"],[0,"\n       "]],"start1":905,"start2":905,"length1":16,"length2":26},{"diffs":[[0,"        "],[1,"newTime = newTime ? new Date().getTime()\n            @lastSeen "],[0,"\n\nNow ou"]],"start1":928,"start2":928,"length1":16,"length2":79}]],"length":1676,"saved":false}
{"ts":1381258045719,"patch":[[{"diffs":[[0,"        "],[-1,"display"],[1,"first"],[0,"Name:  n"]],"start1":833,"start2":833,"length1":23,"length2":21},{"diffs":[[0,"last"],[-1,"Seen:     0"],[1,"Name:   null"],[0,"\n   "]],"start1":866,"start2":866,"length1":19,"length2":20},{"diffs":[[0,"astSeen "],[1,"= newTime"],[0,"\n\nNow ou"]],"start1":990,"start2":990,"length1":16,"length2":25}]],"length":1684,"saved":false}
{"ts":1381258122863,"patch":[[{"diffs":[[0,"    "],[-1,"touch"],[1,"getFormatedName"],[0,": (n"]],"start1":902,"start2":902,"length1":13,"length2":23},{"diffs":[[0,"    "],[-1,"newTime = newTime ? new Date().getTime()\n            @lastSeen = newTime\n"],[1,"return \"#{@lastName}, #{@firsName}\""],[0,"\nNow"]],"start1":941,"start2":941,"length1":81,"length2":43}]],"length":1656,"saved":false}
{"ts":1381258134119,"patch":[[{"diffs":[[0,"ime)"],[-1,"\n            return"],[0," \"#{"]],"start1":928,"start2":928,"length1":27,"length2":8}]],"length":1637,"saved":false}
{"ts":1381259539325,"patch":[[{"diffs":[[0,"me: "],[-1,"(newTime)"],[1,"->"],[0," \"#{"]],"start1":919,"start2":919,"length1":17,"length2":10}]],"length":1630,"saved":false}
{"ts":1381259699933,"patch":[[{"diffs":[[0,"sName}\"\n"],[1,"\n"],[0,"Now our "]],"start1":947,"start2":947,"length1":16,"length2":17},{"diffs":[[0,"tor for "],[-1,"p"],[1,"P"],[0,"erson.\n "]],"start1":992,"start2":992,"length1":17,"length2":17},{"diffs":[[0,"   \n"],[-1,"All arguments we pass to the constructor are passed on to init:\n    \n      it 'calls init', ->\n        now      = new Date().getTime()"],[1,"Properties are injected into the new Instance.\n    \n      it 'injects properties', ->\n    "],[0,"\n   "]],"start1":1121,"start2":1121,"length1":142,"length2":98}]],"length":1587,"saved":false}
{"ts":1381259985731,"patch":[[{"diffs":[[0,"    "],[-1,"\n"],[0,"    "],[-1,"    myPerson = new exports.Person 'Dalia', now\n        myPerson.displayName.should.equal 'Dalia'\n        myPerson.lastSeen.should.equal now"],[1,"dalia = new Person\n          firstName: 'Dalia'\n          lastName:  'Scarlet'"],[0,"\n\nWr"]],"start1":1211,"start2":1211,"length1":152,"length2":90}]],"length":1525,"saved":false}
{"ts":1381260052472,"patch":[[{"diffs":[[0,"arlet'\n\n"],[1,"       dalia.firstName.should.equal 'Dalia'\n       dalia.lastName.should.equal  'Scarlet'\n       \n"],[0,"Writing "]],"start1":1291,"start2":1291,"length1":16,"length2":114}]],"length":1623,"saved":false}
{"ts":1381260068947,"patch":[[{"diffs":[[0,"et'\n\n       "],[1," "],[0,"dalia.firstN"]],"start1":1294,"start2":1294,"length1":24,"length2":25},{"diffs":[[0,"ual 'Dalia'\n"],[1," "],[0,"       dalia"]],"start1":1332,"start2":1332,"length1":24,"length2":25}]],"length":1625,"saved":false}
{"ts":1381260132397,"patch":[[{"diffs":[[0,"a = new "],[1,"exports."],[0,"Person\n "]],"start1":1223,"start2":1223,"length1":16,"length2":24}]],"length":1633,"saved":false}
{"contributors":[],"silentsave":false,"ts":1381260859626,"patch":[[{"diffs":[[0,"    "],[-1,"\nWriting a asignement for every property is not necessary. [nail-common] includes\na `injector` module to do DI nand even if nail does not use the module on object \ncretaion we can use the Module API to do the work for us:"],[1," dalia.getFormatedName().should.equal 'Scarlet, Dalia'"],[0,"\n\n  "]],"start1":1402,"start2":1402,"length1":229,"length2":62}]],"length":1466,"saved":false}
{"ts":1381261363022,"patch":[[{"diffs":[[0,"Name: ->"],[1," return"],[0," \"#{@las"]],"start1":917,"start2":917,"length1":16,"length2":23},{"diffs":[[0," \n      "],[-1,"it"],[1,"describe"],[0," 'inject"]],"start1":1182,"start2":1182,"length1":18,"length2":24}]],"length":1479,"saved":false}
{"ts":1381261405342,"patch":[[{"diffs":[[0," #{@firs"],[1,"t"],[0,"Name}\"\n\n"]],"start1":947,"start2":947,"length1":16,"length2":17}]],"length":1480,"saved":false}
{"ts":1381262164080,"patch":[[{"diffs":[[0,"re t"],[-1,"a"],[0,"h"],[1,"a"],[0,"t th"]],"start1":342,"start2":342,"length1":10,"length2":10},{"diffs":[[0,"score'\n\n"],[1," - class definitions are objects\n - every key in the definition is a class\n - every aspect of a class has a seperate block\n\n"],[0,"The foll"]],"start1":659,"start2":659,"length1":16,"length2":140},{"diffs":[[0,"   \n"],[-1,"      describe 'injects properties', ->\n    "],[0,"    "]],"start1":1305,"start2":1305,"length1":52,"length2":8},{"diffs":[[0,"erson\n      "],[-1,"    "],[0,"firstName: '"]],"start1":1334,"start2":1334,"length1":28,"length2":24},{"diffs":[[0,"alia'\n      "],[-1," "],[-1,"   "],[0,"lastName:  '"]],"start1":1359,"start2":1359,"length1":28,"length2":24},{"diffs":[[0,"carlet'\n"],[-1,"\n"],[0,"  "],[1,"  it 'injects properties', ->\n"],[0,"      da"]],"start1":1384,"start2":1384,"length1":19,"length2":48},{"diffs":[[0,"alia'\n      "],[-1," "],[-1," "],[0,"dalia.lastNa"]],"start1":1461,"start2":1461,"length1":26,"length2":24},{"diffs":[[0,"'Scarlet'\n  "],[1,"  it 'creates methods', ->\n"],[0,"      dalia."]],"start1":1502,"start2":1502,"length1":24,"length2":51}]],"length":1606,"saved":false}
{"ts":1381262333903,"patch":[[{"diffs":[[0,"y.\n\n"],[-1,"Usgae\n"],[1,"Aout this document\n==========="],[0,"===="]],"start1":317,"start2":317,"length1":14,"length2":38},{"diffs":[[0,"score'\n\n"],[1,"Overview\n========\n\n"],[0," - class"]],"start1":683,"start2":683,"length1":16,"length2":35},{"diffs":[[0," block\n\n"],[1,"Usage\n=====\n###Creating a class\n"],[0,"The foll"]],"start1":826,"start2":826,"length1":16,"length2":48},{"diffs":[[0,"d.be.ok\n"],[-1,"    "],[1,"\n###creating an instance"],[0,"\nPropert"]],"start1":1319,"start2":1319,"length1":20,"length2":40},{"diffs":[[0,"Dalia'\n\n"],[-1,"    "],[1,"###using namespaces\n"]],"start1":1689,"start2":1689,"length1":12,"length2":28}]],"length":1717,"saved":false}
{"ts":1381262895247,"patch":[[{"diffs":[[0,"espaces\n"],[1,"Using namespaces will give evry class a unique name. This name can be used\nto when using resources.\n\nFor a demonstrtion we will use a very simple generic factory function.\n\n    lodObject = (data) -> new nail.lib[data.type] data.properties\n    "]],"start1":1709,"start2":1709,"length1":8,"length2":251}]],"length":1960,"saved":false}
{"ts":1381263075799,"patch":[[{"diffs":[[0,"ction.\n\n"],[1,"    sampleSson =\"\"\"\n                {\n                    \"type\": 'my-module.Person',\n                    \"properties\":{\n                        \"firstName\": \"Nick\"\n                        \"lastName\":  \"Puddel\"   \n                    }\n                }\n                \"\"\"\n"],[0,"    lodO"]],"start1":1882,"start2":1882,"length1":16,"length2":290}]],"length":2234,"saved":false}
{"contributors":[],"silentsave":false,"ts":1381263356874,"patch":[[{"diffs":[[0,"ction.\n\n"],[1,"    it \"can load objects from json\",.>\n  "],[0,"    samp"]],"start1":1882,"start2":1882,"length1":16,"length2":57},{"diffs":[[0,"leSson =\"\"\"\n"],[1,"  "],[0,"            "]],"start1":1939,"start2":1939,"length1":24,"length2":26},{"diffs":[[0,"        "],[-1,"  "],[0,"\"firstNa"]],"start1":2068,"start2":2068,"length1":18,"length2":16},{"diffs":[[0," \"Nick\"\n"],[-1,"  "],[0,"        "]],"start1":2088,"start2":2088,"length1":18,"length2":16},{"diffs":[[0,"              }\n"],[1,"  "],[0,"                "]],"start1":2149,"start2":2149,"length1":32,"length2":34},{"diffs":[[0,"              }\n"],[-1,""],[0,"                "]],"start1":2169,"start2":2169,"length1":32,"length2":32},{"diffs":[[0,"perties\n"],[-1,""],[0,"    "],[1,"\n    nick "]],"start1":2263,"start2":2263,"length1":12,"length2":22}]],"length":2285,"saved":false}
{"ts":1381263389988,"patch":[[{"diffs":[[0,"can "],[1,"be "],[0,"load"],[-1," objects"],[1,"ed"],[0," fro"]],"start1":1898,"start2":1898,"length1":20,"length2":17},{"diffs":[[0,"   nick "],[1," = "]],"start1":2274,"start2":2274,"length1":8,"length2":11}]],"length":2285,"saved":false}
{"ts":1381263442931,"patch":[[{"diffs":[[0,"mple"],[-1,"Sson"],[1,"JSON"],[0," =\"\""]],"start1":1934,"start2":1934,"length1":12,"length2":12},{"diffs":[[0,"\"\"\"\n    "],[1,"  "],[0,"lodObjec"]],"start1":2198,"start2":2198,"length1":16,"length2":18},{"diffs":[[0,"    "],[1,"  "],[0,"nick  = "],[1,"loadObject(JSON.parse sampleJSON)"]],"start1":2275,"start2":2275,"length1":12,"length2":47}]],"length":2322,"saved":false}
{"ts":1381264061321,"patch":[[{"diffs":[[0,"m json\","],[-1,"."],[1," -"],[0,">\n      "]],"start1":1915,"start2":1915,"length1":17,"length2":18},{"diffs":[[0,"\":  \"Pud"],[-1,"d"],[0,"el\"   \n "]],"start1":2125,"start2":2125,"length1":17,"length2":16},{"diffs":[[0,"erties\n    \n"],[-1,""],[0,"      nick  "]],"start1":2263,"start2":2263,"length1":24,"length2":24},{"diffs":[[0,"pleJSON)"],[1,"\n      nick.firstName.should.equal 'Nick'\n      nick.lastName.should.equal 'Pudel'\n      nick.getFormatedName"]],"start1":2314,"start2":2314,"length1":8,"length2":117}]],"length":2431,"saved":false}
{"ts":1381264102789,"patch":[[{"diffs":[[0,"\"type\": "],[-1,"'"],[1,"\""],[0,"my-modul"]],"start1":1989,"start2":1989,"length1":17,"length2":17},{"diffs":[[0,"e.Person"],[-1,"'"],[1,"\""],[0,",\n      "]],"start1":2006,"start2":2006,"length1":17,"length2":17}]],"length":2431,"saved":false}
{"ts":1381264126430,"patch":[[{"diffs":[[0,": \"Nick\""],[1,","],[0,"\n       "]],"start1":2085,"start2":2085,"length1":16,"length2":17}]],"length":2432,"saved":false}
{"ts":1381264160242,"patch":[[{"diffs":[[0,"      lo"],[1,"a"],[0,"dObject "]],"start1":2203,"start2":2203,"length1":16,"length2":17}]],"length":2433,"saved":false}
{"ts":1381264371685,"patch":[[{"diffs":[[0,"    nick.getFormatedName"],[1,"().should.equal \"Pudel, Nick\" "]],"start1":2409,"start2":2409,"length1":24,"length2":54}]],"length":2463,"saved":false}
{"ts":1381265073176,"patch":[[{"diffs":[[0,"y.\n\n"],[-1,"Aout t"],[1,"T"],[0,"his "],[-1,"d"],[1,"D"],[0,"ocum"]],"start1":317,"start2":317,"length1":19,"length2":14},{"diffs":[[0,"========"],[-1,"====="],[0,"\nTo ensu"]],"start1":340,"start2":340,"length1":21,"length2":16},{"diffs":[[0,"equires "],[1,"[underscore], [should] and "],[0,"an"],[-1," "],[0," instrum"]],"start1":421,"start2":421,"length1":19,"length2":45},{"diffs":[[0,"nail"],[-1,", underscore and should"],[0,".\nIn"]],"start1":483,"start2":483,"length1":31,"length2":8},{"diffs":[[0,"========"],[1,"\nThe nail concept:"],[0,"\n\n - cla"]],"start1":693,"start2":693,"length1":16,"length2":34},{"diffs":[[0,"a class\n"],[-1,""],[0," - every"]],"start1":788,"start2":788,"length1":16,"length2":16},{"diffs":[[0," block\n\n"],[1,"Nail uses the API defined by [nail-core] and modules from [nail-common].\n\n"],[0,"Usage\n=="]],"start1":837,"start2":837,"length1":16,"length2":90}]],"length":2548,"saved":false}
